/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.31
 * Generated at: 2018-10-16 03:55:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.webrtc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class webrtc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("Copyright 2017 Google Inc.\r\n");
      out.write("Licensed under the Apache License, Version 2.0 (the \"License\");\r\n");
      out.write("you may not use this file except in compliance with the License.\r\n");
      out.write("You may obtain a copy of the License at\r\n");
      out.write("    http://www.apache.org/licenses/LICENSE-2.0\r\n");
      out.write("Unless required by applicable law or agreed to in writing, software\r\n");
      out.write("distributed under the License is distributed on an \"AS IS\" BASIS,\r\n");
      out.write("WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n");
      out.write("See the License for the specific language governing permissions and\r\n");
      out.write("limitations under the License.\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<!-- Global site tag (gtag.js) - Google Analytics -->\r\n");
      out.write("<script async\r\n");
      out.write("\tsrc=\"https://www.googletagmanager.com/gtag/js?id=UA-33848682-1\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("window.dataLayer = window.dataLayer || [];\r\n");
      out.write("function gtag() {\r\n");
      out.write("  window.dataLayer.push(arguments);\r\n");
      out.write("}\r\n");
      out.write("gtag('js', new Date());\r\n");
      out.write("gtag('config', 'UA-33848682-1');z\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"description\"\r\n");
      out.write("\tcontent=\"Simplest possible examples of HTML, CSS and JavaScript.\">\r\n");
      out.write("<meta name=\"author\" content=\"//samdutton.com\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta itemprop=\"name\"\r\n");
      out.write("\tcontent=\"simpl.info: simplest possible examples of HTML, CSS and JavaScript\">\r\n");
      out.write("<meta itemprop=\"image\" content=\"/images/icons/icon192.png\">\r\n");
      out.write("<meta id=\"theme-color\" name=\"theme-color\" content=\"#fff\">\r\n");
      out.write("\r\n");
      out.write("<base target=\"_blank\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>RTCPeerConnection</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("button {\r\n");
      out.write("\tmargin: 0 20px 0 0;\r\n");
      out.write("\twidth: 85.9px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button#hangupButton {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p.borderBelow {\r\n");
      out.write("\tmargin: 0 0 1.5em 0;\r\n");
      out.write("\tpadding: 0 0 1.5em 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("video {\r\n");
      out.write("\theight: 225px;\r\n");
      out.write("\tmargin: 0 0 20px 0;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("\twidth: calc(50% - 13px);\r\n");
      out.write("\tbackground-color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("video#localVideo {\r\n");
      out.write("\tmargin: 0 20px 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media ( max-width : 400px) {\r\n");
      out.write("\tbutton {\r\n");
      out.write("\t\twidth: 83px;\r\n");
      out.write("\t}\r\n");
      out.write("\tbutton {\r\n");
      out.write("\t\tmargin: 0 11px 10px 0;\r\n");
      out.write("\t}\r\n");
      out.write("\tvideo {\r\n");
      out.write("\t\theight: 90px;\r\n");
      out.write("\t\tmargin: 0 0 10px 0;\r\n");
      out.write("\t\twidth: calc(50% - 7px);\r\n");
      out.write("\t}\r\n");
      out.write("\tvideo#localVideo {\r\n");
      out.write("\t\tmargin: 0 10px 20px 0;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container-fluid text-center\">\r\n");
      out.write("\t\t<div class=\"row content\">\r\n");
      out.write("\t\t\t<div class=\"col-sm-2\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"pillnon\">처방전 없이 살수 있는 의약품</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"pillusage\">복용법</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-sm-8 text-left\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div id=\"highlight\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<h1>Test RTCPeerConnection</h1>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- <p>Check out the complete set of WebRTC demos at <a href=\"https://webrtc.github.io/samples/\" title=\"WebRTC samples GitHub Pages\">webrtc.github.io/samples</a>.</p> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<video id=\"localVideo\" autoplay muted></video>\r\n");
      out.write("\t\t\t\t\t<video id=\"remoteVideo\" autoplay></video>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-default\" id=\"startButton\">Start</button>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-default\" id=\"callButton\">Call</button>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-default\" id=\"hangupButton\">Hang Up</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<script src=\"js/main.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!--     <a href=\"https://github.com/samdutton/simpl/blob/gh-pages/rtcpeerconnection\" title=\"View source for this page on GitHub\" id=\"viewSource\">View source on GitHub</a> -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-sm-2 sidenav\">\r\n");
      out.write("\t\t\t\t<div class=\"well\">\r\n");
      out.write("\t\t\t\t\t<p>ADS</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"well\">\r\n");
      out.write("\t\t\t\t\t<p>ADS</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
