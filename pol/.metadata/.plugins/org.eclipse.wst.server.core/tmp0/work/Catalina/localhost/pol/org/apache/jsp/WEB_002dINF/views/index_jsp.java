/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.31
 * Generated at: 2018-10-17 14:55:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("img {\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n");
      out.write("\t\t<!-- Indicators -->\r\n");
      out.write("\t\t<ol class=\"carousel-indicators\">\r\n");
      out.write("\t\t\t<li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n");
      out.write("\t\t\t<li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\r\n");
      out.write("\t\t\t<li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\r\n");
      out.write("\t\t\t<li data-target=\"#myCarousel\" data-slide-to=\"3\"></li>\r\n");
      out.write("\t\t</ol>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Wrapper for slides -->\r\n");
      out.write("\t\t<div class=\"carousel-inner\" role=\"listbox\" style=\"height: 600px;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"item active\">\r\n");
      out.write("\t\t\t\t<img src=\"img/main/Img00.jpg\" alt=\"Chania\" style=\"margin: 0 auto;\">\r\n");
      out.write("\t\t\t\t<div class=\"carousel-caption\">\r\n");
      out.write("\t\t\t\t\t<h3>복용법</h3>\r\n");
      out.write("\t\t\t\t\t<p>올바른 복용법을 알려 드립니다</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"item\">\r\n");
      out.write("\t\t\t\t<img src=\"img/main/Img01.jpg\" alt=\"Chania\" width=\"460\" height=\"345\">\r\n");
      out.write("\t\t\t\t<div class=\"carousel-caption\">\r\n");
      out.write("\t\t\t\t\t<h3>가까운 약국</h3>\r\n");
      out.write("\t\t\t\t\t<p>운영중인 가까운 약국을 알려드립니다</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"item\">\r\n");
      out.write("\t\t\t\t<img src=\"img/main/Img02.jpg\" alt=\"Flower\" width=\"460\" height=\"345\">\r\n");
      out.write("\t\t\t\t<div class=\"carousel-caption\">\r\n");
      out.write("\t\t\t\t\t<h3>게시판</h3>\r\n");
      out.write("\t\t\t\t\t<p>궁금한 점을 물어 보세요.</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Left and right controls -->\r\n");
      out.write("\t\t<a class=\"left carousel-control\" href=\"#myCarousel\" role=\"button\"\r\n");
      out.write("\t\t\tdata-slide=\"prev\"> <span class=\"glyphicon glyphicon-chevron-left\"\r\n");
      out.write("\t\t\taria-hidden=\"true\"></span> <span class=\"sr-only\">Previous</span>\r\n");
      out.write("\t\t</a> <a class=\"right carousel-control\" href=\"#myCarousel\" role=\"button\"\r\n");
      out.write("\t\t\tdata-slide=\"next\"> <span\r\n");
      out.write("\t\t\tclass=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\r\n");
      out.write("\t\t\t<span class=\"sr-only\">Next</span>\r\n");
      out.write("\t\t</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<h2 id=\"myip\"></h2>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li>위도:<span id=\"latitude\"></span></li>\r\n");
      out.write("\t\t<li>경도:<span id=\"longitude\"></span></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<div id=\"googleMap\" style=\"height: 400px; width: 100%;\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction loadScript() {\r\n");
      out.write("\t\tvar script = document.createElement('script');\r\n");
      out.write("\t\tscript.type = 'text/javascript';\r\n");
      out.write("\t\tscript.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&'\r\n");
      out.write("\t\t\t\t+ 'callback=initialize';\r\n");
      out.write("\t\tdocument.body.appendChild(script);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//오늘 날짜의 정보\r\n");
      out.write("\tvar today = new Date();\r\n");
      out.write("\tvar date = today.getDay();\r\n");
      out.write("\tvar time = today.getHours()+today.getMinutes();\r\n");
      out.write("\t\r\n");
      out.write("\t//구글맵에 설정할 마커위치\r\n");
      out.write("\t//0번 배열은 유저의 위치\r\n");
      out.write("\tvar locations = [\r\n");
      out.write("\t\t\t[ ],\r\n");
      out.write("\t\t];\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getlc() {\r\n");
      out.write("\t\t//사용가 위도와 경도를 가져옴\r\n");
      out.write("\t\t// Geolocation API에 액세스할 수 있는지를 확인\r\n");
      out.write("\t\tif (navigator.geolocation) {\r\n");
      out.write("\t\t\t//위치 정보를 얻기\r\n");
      out.write("\t\t\tnavigator.geolocation.getCurrentPosition(function(pos) {\r\n");
      out.write("\t\t\t\t$('#latitude').html(pos.coords.latitude); // 위도\r\n");
      out.write("\t\t\t\t$('#longitude').html(pos.coords.longitude); // 경도\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tlocations[0][0] =\"나의현재위치\";\r\n");
      out.write("\t\t\t\tlocations[0][1] =pos.coords.latitude;\r\n");
      out.write("\t\t\t\tlocations[0][2] =pos.coords.longitude;\r\n");
      out.write("\t\t\t\tconsole.log(locations[0]);\r\n");
      out.write("\t\t\t\tgetlctn(pos.coords.latitude, pos.coords.longitude)\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert(\"이 브라우저에서는 Geolocation이 지원되지 않습니다.\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//위,경도를 기반으로 현재 나의 위치 정보를 가져옴\r\n");
      out.write("\tfunction getlctn(la, lo) {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : 'lctncheck',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tlat : la,\r\n");
      out.write("\t\t\t\tlon : lo\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tvar loc = data;\r\n");
      out.write("\t\t\t\tvar loc0 = loc[\"results\"][0];\r\n");
      out.write("\t\t\t\tvar loc1 = loc0[\"geometry\"];\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\tconsole.log(\"맵실행\");\r\n");
      out.write("\t\t\t\tgo_search(loc0[\"address_components\"][4][\"long_name\"],\r\n");
      out.write("\t\t\t\t\t\tloc0[\"address_components\"][3][\"long_name\"]);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(req, status) {\r\n");
      out.write("\t\t\t\talert(status + \":\" + req.status);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//주변의 약국위치 정보를 가져와 배열에 저장\r\n");
      out.write("\tfunction go_search(si, gun) {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : 'data/pharmacy',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tsido : si,\r\n");
      out.write("\t\t\t\tgungu : gun\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\tconsole.log(date)\r\n");
      out.write("\t\t\t\tconsole.log(time)\r\n");
      out.write("\t\t\t\t$(data).find('item').each(\r\n");
      out.write("\t\t\t\t\t\t\tfunction(idx) {\r\n");
      out.write("\t\t\t\t\t\t\t\tlocations.push([]);\r\n");
      out.write("\t\t\t\t\t\t\t\tlocations[idx+1][0] = $(this).find('dutyName').text();\r\n");
      out.write("\t\t\t\t\t\t\t\tlocations[idx+1][1] = $(this).find('wgs84Lat').text();\r\n");
      out.write("\t\t\t\t\t\t\t\tlocations[idx+1][2] = $(this).find('wgs84Lon').text();\r\n");
      out.write("\t\t\t\t\t\t\t\tconsole.log(locations[idx+1]);\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\tinitialize();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(req, status) {\r\n");
      out.write("\t\t\t\talert(status + \": \" + req.status);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//비동기 방식\r\n");
      out.write("\t// \tfunction myMap(latitude, longitude,name) {\r\n");
      out.write("\tfunction initialize() {\r\n");
      out.write("\t\r\n");
      out.write("\t\t//구글 api 위치설정\r\n");
      out.write("\t\tvar map = new google.maps.Map(document.getElementById('googleMap'), {\r\n");
      out.write("\t\t\tzoom : 14,\r\n");
      out.write("\t\t\tcenter : new google.maps.LatLng(locations[0][1],locations[0][2]),\r\n");
      out.write("\t\t\tmapTypeId : google.maps.MapTypeId.ROADMAP\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar infowindow = new google.maps.InfoWindow();\r\n");
      out.write("\r\n");
      out.write("\t\tvar marker;\r\n");
      out.write("\r\n");
      out.write("\t\tfor (var i = 0; i < locations.length; i++) {\r\n");
      out.write("\t\t\tmarker = new google.maps.Marker({\r\n");
      out.write("\t\t\t\tposition : new google.maps.LatLng(locations[i][1],locations[i][2]),\r\n");
      out.write("\t\t\t\tmap : map\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tgoogle.maps.event.addListener(marker, 'click',\r\n");
      out.write("\t\t\t\t\t(function(marker, i) {\r\n");
      out.write("\t\t\t\t\t\treturn function() {\r\n");
      out.write("\t\t\t\t\t\t\tinfowindow.setContent(locations[i][0]);\r\n");
      out.write("\t\t\t\t\t\t\tinfowindow.open(map, marker);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t})(marker, i));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tgetlc();\r\n");
      out.write("// \twindow.onload = loadScript;\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCsrerDHJrp9Wu09Ij7MUELxCTPiYfxfBI\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
