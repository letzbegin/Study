package com.board.controller;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.board.service.BoardService;
import com.board.vo.BoardVO;

@Controller
@RequestMapping("/board")
public class BoardController {

	private static final Logger logger = LoggerFactory.getLogger(BoardController.class);
	
	@Inject
	private BoardService service;
	
	
	@RequestMapping(value="/register", method=RequestMethod.GET)
	public void registerGet(BoardVO vo, Model model) throws Exception{
		
		logger.info("register get .......");
	}
	
	@RequestMapping(value="/register", method=RequestMethod.POST)
	public String registerPost(BoardVO vo , Model model, RedirectAttributes attr) throws Exception{
		
		logger.info("register post ......");
		logger.info("board.toString()");
		
		service.create(vo);
		
//	Model 에 담아서 보내면 listALL에서 get방식으로 받기 때문에 URL에 listAll?result=success로 표기 됨
//	때문에 RedirectAttributes로 처리하면 redirect되는 시점 한번에서만 해당 값을 사용하며 숨겨진 형식으로 표기됨
//		model.addAttribute("result","success");
		attr.addFlashAttribute("msg","success");
		return "redirect:/board/listAll";
	}
	
	
	@RequestMapping(value="/listAll", method=RequestMethod.GET)
	public void listAll(Model model) throws Exception{
		
		logger.info("show all list..................");
		model.addAttribute("list",service.listAll());
	}
	
	@RequestMapping(value="/read", method=RequestMethod.GET)
	public void read (@RequestParam("bno") int bno, Model model) throws Exception{
		
		model.addAttribute(service.read(bno));
	}
	
	@RequestMapping(value="/remove", method=RequestMethod.POST)
	public String remove(@RequestParam("bno") int bno,RedirectAttributes attr) throws
	Exception{
		
		service.delete(bno);
		
		attr.addFlashAttribute("msg","success");
		
		return "redirect:/board/listAll";
	}
	
	
	
	@RequestMapping(value="/modify" , method=RequestMethod.GET)
	public String modifyGET(@RequestParam int bno,Model model)throws Exception{
		
		model.addAttribute(service.read(bno));
	}
	
	@RequestMapping(value="/modify",method=RequestMethod.POST)
	public String modifyPOST(BoardVO vo , RedirectAttributes attr) throws Exception{
		
		
		
	}
	
}
